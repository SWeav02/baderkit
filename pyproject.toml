
# This file establishes the info needed to install baderkit via pip, how to
# upload it to PyPI, and how to run python packages like pytest and coverage.

# For more information on this file and how to make similar ones, see:
#    https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
#    https://github.com/pypa/sampleproject

# -----------------------------------------------------------------------------

[build-system]
# These are the assumed default build requirements from pip:
# https://pip.pypa.io/en/stable/reference/pip/#pep-517-and-518-support
requires = ["setuptools>=64.0.0", "wheel"]
build-backend = "setuptools.build_meta"

# -----------------------------------------------------------------------------

[project]

# published name for pip install to use
name="baderkit"

# Versions should comply with PEP 440:
# https://www.python.org/dev/peps/pep-0440/
# https://semver.org/
version="0.0.1"

# Maintainer info
authors = [{name = "Sam M. Weaver", email = "sammweaver@gmail.com"}]

# General name for our LICENSE file
license = {text = "BSD 3-Clause License"}

# Classifiers help users find your project by categorizing it.
# For a list of valid classifiers, see https://pypi.org/classifiers/
classifiers=[
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
]

# Specify which Python versions are supported.
requires-python=">=3.10"

# This field lists other packages that your project depends on to run.
dependencies=[
    # Core dependencies
    "numpy",
    "pandas",
    "typer",
    "pymatgen",
    "scipy",
    "numba",
    "pyvista", # for plotting grid
    "streamlit", # for web GUI
    "panel", # for plot html export
    # Extra (smaller) dependencies & utilities
    "markdown",  # for docs and markdown rendering in html templates
    "rich", # for coloring CLI outputs and progress bars
]

# optional dependencies that are not installed by default
[project.optional-dependencies]
# For development and testing
DEV = [
    "pytest",
    "black",
    "isort",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocstrings-python",
    "mkdocs_autorefs"  # BUG-FIX
]

EXTRAS = [
    "spyder",  # IDE for writing/editting
]

# Link to our homepage. Use github for now.
[project.urls]
# homepage = "https://simmate.org/"
repository = "https://github.com/SWeav02/baderkit"
# documentation = "https://jacksund.github.io/simmate/home/"

# Register command line interface
[project.scripts]
baderkit = "baderkit.command_line.base:baderkit_app"

# -----------------------------------------------------------------------------

# Indicate which directory the source coude is in
[tool.setuptools.packages.find]
where = ["src"]

# All files that aren't *.py need to be defined explicitly. Don't "automate"
# this to grab all files because this could break installation. This can
# be effectively the opposite of .gitignore.
[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
baderkit = [
    "**/*.md",
    "**/*.rst",
    "**/*.json",
    "**/*.csv",
    "**/*.yaml",
    "**/*.html",
    "**/*.svg",
    "**/*.toml",
    "**/*.css",
    "**/*.js",
]
# Note, the default is to include everything, but I don't want to ship test
# files. I could switch this to use exclude-package-data in the future.
# https://setuptools.pypa.io/en/latest/userguide/datafiles.html#exclude-package-data

# -----------------------------------------------------------------------------
# Section for pytests when I make them
# -----------------------------------------------------------------------------

# -----------------------------------------------------------------------------

# isort is a tool for organizing imports at the top of python files. By default,
# it conflicts with the black formatter we use, so we need to configure it here.

[tool.isort]
profile = "black"

# -----------------------------------------------------------------------------
